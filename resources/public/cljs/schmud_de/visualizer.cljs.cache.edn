;; Analyzed by ClojureScript 1.7.48
{:use-macros nil, :excludes #{}, :name schmud-de.visualizer, :imports nil, :requires {q quil.core, quil.core quil.core, liner schmud-de.drawing, schmud-de.drawing schmud-de.drawing, filter schmud-de.filter, schmud-de.filter schmud-de.filter, m quil.middleware, quil.middleware quil.middleware}, :uses nil, :defs {sine {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 9, :column 7, :end-line 9, :end-column 11, :arglists (quote ([amplitude frequency duration]))}, :name schmud-de.visualizer/sine, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 11, :method-params ([amplitude frequency duration]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 3, :fn-var true, :arglists (quote ([amplitude frequency duration]))}, frequency {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 19, :column 7, :end-line 19, :end-column 16, :arglists (quote ([]))}, :name schmud-de.visualizer/frequency, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, duration {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 23, :column 7, :end-line 23, :end-column 15, :arglists (quote ([frequency]))}, :name schmud-de.visualizer/duration, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 15, :method-params ([frequency]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([frequency]))}, setup {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 32, :column 7, :end-line 32, :end-column 12, :arglists (quote ([]))}, :name schmud-de.visualizer/setup, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, move-wavetable {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 54, :column 7, :end-line 54, :end-column 21, :arglists (quote ([line dec-amount scaler]))}, :name schmud-de.visualizer/move-wavetable, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 21, :method-params ([line dec-amount scaler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 3, :fn-var true, :arglists (quote ([line dec-amount scaler]))}, draw-wavetable {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 61, :column 7, :end-line 61, :end-column 21, :arglists (quote ([wavetable dec-amount scaler]))}, :name schmud-de.visualizer/draw-wavetable, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 21, :method-params ([wavetable dec-amount scaler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 3, :fn-var true, :arglists (quote ([wavetable dec-amount scaler]))}, iteration-x-axis-scaler {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 68, :column 7, :end-line 68, :end-column 30, :arglists (quote ([dec-amount halfway-point]))}, :name schmud-de.visualizer/iteration-x-axis-scaler, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 30, :method-params ([dec-amount halfway-point]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dec-amount halfway-point]))}, draw {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 78, :column 7, :end-line 78, :end-column 11, :arglists (quote ([]))}, :name schmud-de.visualizer/draw, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mainBox {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 99, :column 14, :end-line 99, :end-column 21, :export true, :arglists (quote ([]))}, :name schmud-de.visualizer/mainBox, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:hsb :coordinates :fn :size :setup :middleware :host :halfway :host-id :no-start :draw}, :order [:hsb :coordinates :halfway :host :size :setup :middleware :draw :no-start :fn :host-id]}, :doc nil}