;; Analyzed by ClojureScript 1.7.48
{:use-macros nil, :excludes #{}, :name schmud-de.visualizer, :imports nil, :requires {q quil.core, schmud-de.filter schmud-de.filter, schmud-de.lister schmud-de.lister, m quil.middleware, liner schmud-de.drawing, quil.core quil.core, quil.middleware quil.middleware, lister schmud-de.lister, schmud-de.drawing schmud-de.drawing, filter schmud-de.filter}, :uses nil, :defs {draw {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 88, :column 7, :end-line 88, :end-column 11, :arglists (quote ([]))}, :name schmud-de.visualizer/draw, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, cycle-point {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 12, :column 7, :end-line 12, :end-column 18, :arglists (quote ([ys position]))}, :name schmud-de.visualizer/cycle-point, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 18, :method-params ([ys position]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ys position]))}, mainBox {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 117, :column 14, :end-line 117, :end-column 21, :export true, :arglists (quote ([]))}, :name schmud-de.visualizer/mainBox, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, window-size {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 34, :column 7, :end-line 34, :end-column 18, :arglists (quote ([frequency]))}, :name schmud-de.visualizer/window-size, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 18, :method-params ([frequency]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([frequency]))}, frequency {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 10, :column 7, :end-line 10, :end-column 16, :arglists (quote ([]))}, :name schmud-de.visualizer/frequency, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, duration {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 31, :column 7, :end-line 31, :end-column 15, :arglists (quote ([ys]))}, :name schmud-de.visualizer/duration, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 15, :method-params ([ys]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ys]))}, sine-ys {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 42, :column 7, :end-line 42, :end-column 14, :arglists (quote ([amplitude]))}, :name schmud-de.visualizer/sine-ys, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 14, :method-params ([amplitude]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([amplitude]))}, range-scaler {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 21, :column 7, :end-line 21, :end-column 19, :arglists (quote ([value original-min original-max destination-min destination-max]))}, :name schmud-de.visualizer/range-scaler, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 19, :method-params ([value original-min original-max destination-min destination-max]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 5, :fn-var true, :arglists (quote ([value original-min original-max destination-min destination-max]))}, iteration-x-axis-scaler {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 82, :column 7, :end-line 82, :end-column 30, :arglists (quote ([dec-amount one-cycle-length]))}, :name schmud-de.visualizer/iteration-x-axis-scaler, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 30, :method-params ([dec-amount one-cycle-length]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dec-amount one-cycle-length]))}, setup {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 55, :column 7, :end-line 55, :end-column 12, :arglists (quote ([]))}, :name schmud-de.visualizer/setup, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, draw-wavetable {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 75, :column 7, :end-line 75, :end-column 21, :arglists (quote ([wavetable dec-amount scaler]))}, :name schmud-de.visualizer/draw-wavetable, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 21, :method-params ([wavetable dec-amount scaler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 3, :fn-var true, :arglists (quote ([wavetable dec-amount scaler]))}, move-wavetable {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 69, :column 7, :end-line 69, :end-column 21, :arglists (quote ([line dec-amount scaler]))}, :name schmud-de.visualizer/move-wavetable, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 21, :method-params ([line dec-amount scaler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 3, :fn-var true, :arglists (quote ([line dec-amount scaler]))}, sine {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 48, :column 7, :end-line 48, :end-column 11, :arglists (quote ([frequency linear-duration ys]))}, :name schmud-de.visualizer/sine, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 11, :method-params ([frequency linear-duration ys]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 3, :fn-var true, :arglists (quote ([frequency linear-duration ys]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:hsb :coordinates :fn :size :setup :middleware :host :one-cycle :host-id :no-start :draw}, :order [:hsb :coordinates :one-cycle :host :size :setup :middleware :draw :no-start :fn :host-id]}, :doc nil}