;; Analyzed by ClojureScript 1.7.48
{:use-macros nil, :excludes #{}, :name schmud-de.visualizer, :imports nil, :requires {q quil.core, quil.core quil.core, m quil.middleware, quil.middleware quil.middleware}, :uses nil, :defs {setup {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 5, :column 7, :end-line 5, :end-column 12, :arglists (quote ([]))}, :name schmud-de.visualizer/setup, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, draw {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 10, :column 7, :end-line 10, :end-column 11, :arglists (quote ([]))}, :name schmud-de.visualizer/draw, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mainBox {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 16, :column 14, :end-line 16, :end-column 21, :export true, :arglists (quote ([]))}, :name schmud-de.visualizer/mainBox, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, render {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 23, :column 7, :end-line 23, :end-column 13, :arglists (quote ([]))}, :name schmud-de.visualizer/render, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, hello {:protocol-inline nil, :meta {:file "/home/schmudde/code/playground/schmud-de/src/schmud_de/visualizer.cljs", :line 27, :column 7, :end-line 27, :end-column 12, :arglists (quote ([]))}, :name schmud-de.visualizer/hello, :variadic false, :file "src/schmud_de/visualizer.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:fn :size :setup :middleware :host :host-id :no-start :draw}, :order [:host :size :setup :middleware :draw :no-start :fn :host-id]}, :doc nil}